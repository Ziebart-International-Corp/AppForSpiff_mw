@page "/maindata/create"
@using Microsoft.EntityFrameworkCore
@using AppForSpiff.Models
@inject IDbContextFactory<AppForSpiff.Data.AppForSpiffContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>MainData</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="MainData" OnValidSubmit="AddMainData" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="inv_invoiceheader_id" class="form-label">Inv_InvoiceHeader_ID:</label> 
                <InputNumber id="inv_invoiceheader_id" @bind-Value="MainData.Inv_InvoiceHeader_ID" class="form-control" /> 
                <ValidationMessage For="() => MainData.Inv_InvoiceHeader_ID" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dealercode" class="form-label">DealerCode:</label> 
                <InputText id="dealercode" @bind-Value="MainData.DealerCode" class="form-control" /> 
                <ValidationMessage For="() => MainData.DealerCode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="salesmanemployee_id" class="form-label">SalesmanEmployee_ID:</label> 
                <InputNumber id="salesmanemployee_id" @bind-Value="MainData.SalesmanEmployee_ID" class="form-control" /> 
                <ValidationMessage For="() => MainData.SalesmanEmployee_ID" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="channel_number" class="form-label">Channel_Number:</label> 
                <InputNumber id="channel_number" @bind-Value="MainData.Channel_Number" class="form-control" /> 
                <ValidationMessage For="() => MainData.Channel_Number" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="invoicedate" class="form-label">InvoiceDate:</label> 
                <InputDate id="invoicedate" @bind-Value="MainData.InvoiceDate" class="form-control" /> 
                <ValidationMessage For="() => MainData.InvoiceDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="invoicenumber" class="form-label">InvoiceNumber:</label> 
                <InputText id="invoicenumber" @bind-Value="MainData.InvoiceNumber" class="form-control" /> 
                <ValidationMessage For="() => MainData.InvoiceNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="invoicetotal" class="form-label">InvoiceTotal:</label> 
                <InputNumber id="invoicetotal" @bind-Value="MainData.InvoiceTotal" class="form-control" /> 
                <ValidationMessage For="() => MainData.InvoiceTotal" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="MainData.FirstName" class="form-control" /> 
                <ValidationMessage For="() => MainData.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="MainData.LastName" class="form-control" /> 
                <ValidationMessage For="() => MainData.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="packageitem_id" class="form-label">PackageItem_ID:</label> 
                <InputNumber id="packageitem_id" @bind-Value="MainData.PackageItem_ID" class="form-control" /> 
                <ValidationMessage For="() => MainData.PackageItem_ID" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="svs_service_id" class="form-label">Svs_Service_ID:</label> 
                <InputNumber id="svs_service_id" @bind-Value="MainData.Svs_Service_ID" class="form-control" /> 
                <ValidationMessage For="() => MainData.Svs_Service_ID" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="unitprice" class="form-label">UnitPrice:</label> 
                <InputNumber id="unitprice" @bind-Value="MainData.UnitPrice" class="form-control" /> 
                <ValidationMessage For="() => MainData.UnitPrice" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="quantity" class="form-label">Quantity:</label> 
                <InputNumber id="quantity" @bind-Value="MainData.Quantity" class="form-control" /> 
                <ValidationMessage For="() => MainData.Quantity" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="totalinvoicediscountapplied_stage04" class="form-label">TotalInvoiceDiscountApplied_Stage04:</label> 
                <InputNumber id="totalinvoicediscountapplied_stage04" @bind-Value="MainData.TotalInvoiceDiscountApplied_Stage04" class="form-control" /> 
                <ValidationMessage For="() => MainData.TotalInvoiceDiscountApplied_Stage04" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="servicecode" class="form-label">ServiceCode:</label> 
                <InputText id="servicecode" @bind-Value="MainData.ServiceCode" class="form-control" /> 
                <ValidationMessage For="() => MainData.ServiceCode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="servicename" class="form-label">ServiceName:</label> 
                <InputText id="servicename" @bind-Value="MainData.ServiceName" class="form-control" /> 
                <ValidationMessage For="() => MainData.ServiceName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="MainData.Description" class="form-control" /> 
                <ValidationMessage For="() => MainData.Description" class="text-danger" /> 
            </div>        
                 
            <div class="mb-3">
                <label for="make" class="form-label">Make:</label> 
                <InputText id="make" @bind-Value="MainData.Make" class="form-control" /> 
                <ValidationMessage For="() => MainData.Make" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="model" class="form-label">Model:</label> 
                <InputText id="model" @bind-Value="MainData.Model" class="form-control" /> 
                <ValidationMessage For="() => MainData.Model" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="vehicletypename" class="form-label">VehicleTypeName:</label> 
                <InputText id="vehicletypename" @bind-Value="MainData.VehicleTypeName" class="form-control" /> 
                <ValidationMessage For="() => MainData.VehicleTypeName" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="packagename" class="form-label">PackageName:</label>
                <InputText id="packagename" @bind-Value="MainData.PackageName" class="form-control" />
                <ValidationMessage For="() => MainData.PackageName" class="text-danger" />
            </div>



            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/maindata">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private MainData MainData { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddMainData()
    {
        using var context = DbFactory.CreateDbContext();
        context.MainData.Add(MainData);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/maindata");
    }
}
