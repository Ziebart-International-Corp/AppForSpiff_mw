@page "/maindatadealers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using AppForSpiff.Models
@using AppForSpiff.Data
@implements IAsyncDisposable
@inject IDbContextFactory<AppForSpiff.Data.AppForSpiffContext> DbFactory

@using System.Security.Claims
@using AppForSpiff.Components.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject DealerClaimService DealerClaimService
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]


<PageTitle>Index</PageTitle>

<h1>Index</h1>

@if (dealerInfo == null)
{
    <p>Loading...</p>
}
else if (!dealerInfo.Any())
{
    <p>No dealer information available for your Dealer Code.</p>
}
else
{
    <p>
        <a href="maindatadealers/create">Create New</a>
    </p>
    <QuickGrid Class="table" Items="dealerInfo.AsQueryable()" TGridItem="MainDataDealer">
        <PropertyColumn Property="maindatadealer => maindatadealer.DealerCode"  Sortable="true" Title="Dealer"/>
        <PropertyColumn Property="maindatadealer => maindatadealer.fmt_StoreHold_Chemical"  Sortable="true" Title="Chem Store Hold"/>
        <PropertyColumn Property="maindatadealer => maindatadealer.fmt_StoreHold_Accessories"  Sortable="true" Title="Acc Store Hold"/>
        <PropertyColumn Property="maindatadealer => maindatadealer.Store_Chemical_Percent"  Sortable="true" Title="Store Chem Percent"/>
        <PropertyColumn Property="maindatadealer => maindatadealer.Store_Accessories_Percent"  Sortable="true" Title="Store Acc Percent"/>

        <TemplateColumn Context="maindatadealer">
            <a href="@($"maindatadealers/edit?dealer_id={maindatadealer.Dealer_ID}")">Edit</a> |
            <a href="@($"maindatadealers/details?dealer_id={maindatadealer.Dealer_ID}")">Details</a> |
            <a href="@($"maindatadealers/delete?dealer_id={maindatadealer.Dealer_ID}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
}

@code {
    private string dealerCode;
    private string searchTerm = "";
    private List<MainDataDealer> dealerInfo = new();
    private AppForSpiffContext context = default!;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            // Check if user has the "ALL" claim
            if (user.HasClaim("DealerCode", "ALL"))
            {
                // Retrieve all dealer information
                dealerInfo = await context.MainDataDealer.ToListAsync();
            }
            else
            {
                // Get dealer code from user claim
                var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                dealerCode = await DealerClaimService.GetDealerCodeByUserIdAsync(userId);

                // Retrieve dealer information based on the dealer code
                dealerInfo = await context.MainDataDealer
                    .Where(info => info.DealerCode == dealerCode)
                    .ToListAsync();
            }
        }
    }

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
