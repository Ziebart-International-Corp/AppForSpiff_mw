@page "/maindataservices/delete"
@using Microsoft.EntityFrameworkCore
@using AppForSpiff.Models
@inject IDbContextFactory<AppForSpiff.Data.AppForSpiffContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>MainDataService</h2>
    <hr />
    @if (maindataservice is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DealerCode</dt>
            <dd class="col-sm-10">@maindataservice.DealerCode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ServiceCode</dt>
            <dd class="col-sm-10">@maindataservice.ServiceCode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ServiceName</dt>
            <dd class="col-sm-10">@maindataservice.ServiceName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@maindataservice.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Required_Channel</dt>
            <dd class="col-sm-10">@maindataservice.Required_Channel</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Min_Sell_Price_Car</dt>
            <dd class="col-sm-10">@maindataservice.Min_Sell_Price_Car</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Min_Sell_Price_Truck</dt>
            <dd class="col-sm-10">@maindataservice.Min_Sell_Price_Truck</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ComAmount</dt>
            <dd class="col-sm-10">@maindataservice.ComAmount</dd>
        </dl>
        <EditForm method="post" Model="maindataservice" OnValidSubmit="DeleteMainDataService" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(maindataservice is null)">Delete</button> |
            <a href="/maindataservices">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private MainDataService? maindataservice;

    [SupplyParameterFromQuery]
    private long Service_ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        maindataservice = await context.MainDataService.FirstOrDefaultAsync(m => m.Service_ID == Service_ID);

        if (maindataservice is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteMainDataService()
    {
        using var context = DbFactory.CreateDbContext();
        context.MainDataService.Remove(maindataservice!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/maindataservices");
    }
}
