@page "/maindatapackages/edit"
@using Microsoft.EntityFrameworkCore
@using AppForSpiff.Models
@inject IDbContextFactory<AppForSpiff.Data.AppForSpiffContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Edit</PageTitle>

<h1>Edit</h1>

<h2>MainDataPackage</h2>
<hr />
@if (MainDataPackage is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="MainDataPackage" OnValidSubmit="UpdateMainDataPackage" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="MainDataPackage.PackageItem_ID" value="@MainDataPackage.PackageItem_ID" />
                <div class="mb-3">
                    <label for="p_service_id" class="form-label">P_Service_ID:</label>
                    <InputNumber id="p_service_id" @bind-Value="MainDataPackage.P_Service_ID" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.P_Service_ID" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="dealercode" class="form-label">DealerCode:</label>
                    <InputText id="dealercode" @bind-Value="MainDataPackage.DealerCode" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.DealerCode" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="title" class="form-label">Title:</label>
                    <InputText id="title" @bind-Value="MainDataPackage.Title" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.Title" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="channel_number" class="form-label">Channel_Number:</label>
                    <InputNumber id="channel_number" @bind-Value="MainDataPackage.Channel_Number" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.Channel_Number" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="servicecode" class="form-label">ServiceCode:</label>
                    <InputText id="servicecode" @bind-Value="MainDataPackage.ServiceCode" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.ServiceCode" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="five_plus" class="form-label">Five_Plus:</label>
                    <InputNumber id="five_plus" @bind-Value="MainDataPackage.Five_Plus" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.Five_Plus" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="under_five" class="form-label">Under_Five:</label>
                    <InputNumber id="under_five" @bind-Value="MainDataPackage.Under_Five" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.Under_Five" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="required_channel" class="form-label">Required_Channel:</label>
                    <InputNumber id="required_channel" @bind-Value="MainDataPackage.Required_Channel" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.Required_Channel" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="min_sell_price" class="form-label">Min_Sell_Price:</label>
                    <InputNumber id="min_sell_price" @bind-Value="MainDataPackage.Min_Sell_Price" class="form-control" />
                    <ValidationMessage For="() => MainDataPackage.Min_Sell_Price" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/maindatapackages">Back to List</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private long PackageItem_ID { get; set; }

    [SupplyParameterFromForm]
    private MainDataPackage? MainDataPackage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        MainDataPackage ??= await context.MainDataPackage.FirstOrDefaultAsync(m => m.PackageItem_ID == PackageItem_ID);

        if (MainDataPackage is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more information, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task UpdateMainDataPackage()
    {
        using var context = DbFactory.CreateDbContext();
        context.Attach(MainDataPackage!).State = EntityState.Modified;

        try
        {
            await context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!MainDataPackageExists(MainDataPackage!.PackageItem_ID))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/maindatapackages");
    }

    private bool MainDataPackageExists(long packageitem_id)
    {
        using var context = DbFactory.CreateDbContext();
        return context.MainDataPackage.Any(e => e.PackageItem_ID == packageitem_id);
    }
}
